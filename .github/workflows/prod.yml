name: MindCode Deploy Actions
run-name: ${{ github.actor }} is deploying MindCode on PRODUCTION ‚≠ê
on:
  push:
    branches:
      - feature-create-docker-production

jobs:
  STOP-DOCKER:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v4

      - name: Conexi√≥n al servidor y stop de docker-compose
        run: |
          echo "${{ secrets.PROD_SECRET_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem
          
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "cd mindcode"
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "docker compose down"
      - run: echo "üçè This job's status is ${{ job.status }}."

  # ------------------------------------------------------
  # scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i "~/prod_key.pem" -r ./docker-compose.yml ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:docker-compose.yml


  FILL-DOCKER-COMPOSE:
    needs: [STOP-DOCKER]
    runs-on: ubuntu-latest
    steps:
      - name: Obtaining repository code
        uses: actions/checkout@v4

      - name: Update Docker Compose
        run: |
          echo "Connecting to the server and running docker-compose commands"
          echo "${{ secrets.PROD_SECRET_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem

          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "rm -f ./mindcode/compose.production.yaml"

          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "echo 'MYSQL_USER=${{ secrets.MYSQL_USER }}' > ./mindcode/.env"
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "echo 'MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}' >> ./mindcode/.env"
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "echo 'MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}' >> ./mindcode/.env"


          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i "~/prod_key.pem" -r ./compose.production.yaml ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:./mindcode/compose.yaml
      - run: echo "üçè This job's status is ${{ job.status }}."

  # ------------------------------------------------------

  BACK-DEPLOY:
    needs: [FILL-DOCKER-COMPOSE]
    runs-on: ubuntu-latest
    steps:
      - name: Obtaining repository code
        uses: actions/checkout@v4

      - name: Front Deploy
        run: |
          echo "${{ secrets.PROD_SECRET_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem
          cd ${{ github.workspace }}
          cd front
          touch .env
          npm install

          echo "NEXT_PUBLIC_URL=${{ secrets.PRODUCTION_API_URI }}" >> .env


          npm run build

          rm -rf ./node_modules

          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "if [ -d ./mindcode/front ] 
                                                                                                                                              then
                                                                                                                                                sudo rm -r ./mindcode/front
                                                                                                                                              else
                                                                                                                                                echo 'No existe la carpeta front'
                                                                                                                                              fi"
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "mkdir ./mindcode/front"
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i "~/prod_key.pem" -r ./* ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:./mindcode/front
      - run: echo "üçè This job's status is ${{ job.status }}."